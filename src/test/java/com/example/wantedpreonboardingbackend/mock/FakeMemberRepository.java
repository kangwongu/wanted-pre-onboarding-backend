package com.example.wantedpreonboardingbackend.mock;

import com.example.wantedpreonboardingbackend.member.domain.Member;
import com.example.wantedpreonboardingbackend.member.service.port.MemberRepository;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.concurrent.atomic.AtomicLong;

public class FakeMemberRepository implements MemberRepository {

    private final AtomicLong autoGeneratedId = new AtomicLong(0);
    private final List<Member> data = new ArrayList<>();

    public Member save(Member member) {
        if (member.getId() == null || member.getId() == 0) {
            Member newMember = Member.builder()
                    .id(autoGeneratedId.incrementAndGet())
                    .name(member.getName())
                    .build();
            data.add(newMember);
            return newMember;
        }
        data.removeIf(d -> Objects.equals(d.getId(), member.getId()));
        data.add(member);
        return member;
    }

    @Override
    public Member getById(long memberId) {
        return data.stream()
                .filter(d -> d.getId().equals(memberId))
                .findAny()
                .orElseThrow(() -> new IllegalStateException("Not Exist Member"));
    }
}
